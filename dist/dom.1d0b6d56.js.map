{"version":3,"sources":["dom.js"],"names":["window","dom","create","htmlStr","container","document","createElement","innerHTML","trim","content","firstChild","after","node1","node2","parentNode","insertBefore","nextSibling","before","append","appendChild","wrap","node","parent","remove","removeChild","empty","childNodes","array","i","length","push"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACX;AACAC,EAAAA,MAFW,kBAEJC,OAFI,EAEK;AACd,QAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAsBJ,OAAO,CAACK,IAAR,EAAtB,CAFc,CAEwB;;AACtC,WAAOJ,SAAS,CAACK,OAAV,CAAkBC,UAAzB,CAHc,CAGuB;AACtC,GANU;AAOX;AACAC,EAAAA,KARW,iBAQLC,KARK,EAQEC,KARF,EAQS;AAClBD,IAAAA,KAAK,CAACE,UAAN,CAAiBC,YAAjB,CAA8BF,KAA9B,EAAqCD,KAAK,CAACI,WAA3C;AACD,GAVU;AAWX;AACAC,EAAAA,MAZW,kBAYJL,KAZI,EAYGC,KAZH,EAYU;AACnBD,IAAAA,KAAK,CAACE,UAAN,CAAiBC,YAAjB,CAA8BF,KAA9B,EAAqCD,KAArC;AACD,GAdU;AAeX;AACAM,EAAAA,MAhBW,kBAgBJN,KAhBI,EAgBGC,KAhBH,EAgBU;AACnBD,IAAAA,KAAK,CAACO,WAAN,CAAkBN,KAAlB;AACD,GAlBU;AAmBX;AACAO,EAAAA,IApBW,gBAoBNC,IApBM,EAoBAC,MApBA,EAoBQ;AACjBrB,IAAAA,GAAG,CAACgB,MAAJ,CAAWI,IAAX,EAAiBC,MAAjB;AACArB,IAAAA,GAAG,CAACiB,MAAJ,CAAWI,MAAX,EAAmBD,IAAnB;AACD,GAvBU;AAwBX;AACAE,EAAAA,MAzBW,kBAyBJF,IAzBI,EAyBE;AACX;AACAA,IAAAA,IAAI,CAACP,UAAL,CAAgBU,WAAhB,CAA4BH,IAA5B;AACA,WAAOA,IAAP;AACD,GA7BU;AA8BX;AACAI,EAAAA,KA/BW,iBA+BLJ,IA/BK,EA+BC;AAAA,QACJK,UADI,GACWL,IADX,CACJK,UADI;AAEV,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C3B,MAAAA,GAAG,CAACsB,MAAJ,CAAWG,UAAU,CAACE,CAAD,CAArB;AACAD,MAAAA,KAAK,CAACG,IAAN,CAAWJ,UAAU,CAACE,CAAD,CAArB;AACD;;AACD,WAAOD,KAAP;AACD;AAvCU,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  // 创建新节点\r\n  create(htmlStr) {\r\n    let container = document.createElement(\"template\");\r\n    container.innerHTML = htmlStr.trim(); // 防止用户加空格变成text\r\n    return container.content.firstChild; // 获取template首个子节点的正确用法\r\n  },\r\n  // 在node1后面插入兄弟节点node2\r\n  after(node1, node2) {\r\n    node1.parentNode.insertBefore(node2, node1.nextSibling);\r\n  },\r\n  // 在node1前面插入兄弟节点node2\r\n  before(node1, node2) {\r\n    node1.parentNode.insertBefore(node2, node1);\r\n  },\r\n  // 新增儿子\r\n  append(node1, node2) {\r\n    node1.appendChild(node2);\r\n  },\r\n  // 新增父节点\r\n  wrap(node, parent) {\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n  },\r\n  // 删除节点\r\n  remove(node) {\r\n    // node.remove(); 比较新，可能不适用\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  // 删除所有子节点\r\n  empty(node) {\r\n    let { childNodes } = node;\r\n    let array = [];\r\n    for (let i = 0; i < childNodes.length; i++) {\r\n      dom.remove(childNodes[i]);\r\n      array.push(childNodes[i]);\r\n    }\r\n    return array;\r\n  },\r\n};\r\n"]}